# ====================================================================== #
#                                                                        #
#                               [general]                                #
# This section is used for general options affecting Haizea as a whole.  #
#                                                                        #
# ====================================================================== #
[general]

# Option: loglevel
# Required: No (default is INFO)
# Valid values: STATUS, INFO, DEBUG, VDEBUG
# 
# Controls the level (and amount) of 
# log messages. Valid values are:
# 
#  - STATUS: Only print status messages
#  - INFO: Slightly more verbose that STATUS
#  - DEBUG: Prints information useful for debugging the scheduler.
#  - VDEBUG: Prints very verbose information
#    on the scheduler's internal data structures. Use only
#    for short runs.
loglevel: INFO

# Option: logfile
# Required: No (default is /var/tmp/haizea.log)
# Valid values: Any string
# 
# When running Haizea as a daemon, this option specifies the file
# that log messages should be written to.
#logfile: /var/tmp/haizea.log

# Option: mode
# Required: Yes
# Valid values: simulated, opennebula
# 
# Sets the mode the scheduler will run in.
# Currently the only valid values are "simulated" and
# "opennebula". The "simulated" mode expects lease
# requests to be provided through a trace file, and
# all enactment is simulated. The "opennebula" mode
# interacts with the OpenNebula virtual infrastructure
# manager (http://www.opennebula.org/) to obtain lease
# requests and to do enactment on physical resources.
mode: simulated

# Option: lease-preparation
# Required: No (default is unmanaged)
# Valid values: unmanaged, imagetransfer
# 
# Sets how the scheduler will handle the
# preparation overhead of leases. Valid values are:
# 
#  - unmanaged: The scheduler can assume that there
#    is no deployment overhead, or that some
#    other entity is taking care of it (e.g., one
#    of the enactment backends)
#  - imagetransfer: A disk image has to be transferred
#    from a repository node before the lease can start.
lease-preparation: unmanaged

# Option: lease-failure-handling
# Required: No (default is cancel)
# Valid values: cancel, exit, exit-raise
# 
# Sets how the scheduler will handle a failure in
# a lease. Valid values are:
# 
#  - cancel: The lease is cancelled and marked as "FAILED"
#  - exit: Haizea will exit cleanly, printing relevant debugging
#    information to its log.
#  - exit-raise: Haizea will exit by raising an exception. This is
#    useful for debugging, as IDEs will recognize this as an exception
#    and will facilitate debugging it.
#lease-failure-handling: cancel

# Option: persistence-file
# Required: No (default is ~/.haizea/leases.dat)
# Valid values: Any string
# 
# This is the file where lease information, along with some
# additional scheduling information, is persisted to. If set
# to "none", no information will be persisted to disk, and
# Haizea will run entirely in-memory (this is advisable
# when running in simulation, as persisting to disk adds
# considerable overhead, compared to running in-memory).
persistence-file: none


# ====================================================================== #
#                                                                        #
#                              [scheduling]                              #
# The options in this section control how Haizea schedules leases.       #
#                                                                        #
# ====================================================================== #
[scheduling]

# Option: mapper
# Required: No (default is greedy)
# Valid values: Any string
# 
# VM-to-physical node mapping algorithm used by Haizea. There is currently
# only one mapper available (the greedy mapper).
#mapper: greedy

# Option: policy-admission
# Required: No (default is accept-all)
# Valid values: Any string
# 
# Lease admission policy. This controls what leases are accepted by Haizea. 
# Take into account that this decision takes place before Haizea even 
# attempts to schedule the lease (so, you can think of lease admission as 
# "eligibility to be scheduled"). 
# 
# There are two built-in policies:
# 
#  - accept-all: Accept all leases.
#  - no-ARs: Accept all leases except advance reservations.
# 
# See the Haizea documentation for details on how to write your own
# policies.
#policy-admission: accept-all

# Option: policy-preemption
# Required: No (default is no-preemption)
# Valid values: Any string
# 
# Lease preemption policy. Determines what leases can be preempted. There
# are two built-in policies:
# 
#  - no-preemption: Do not allow any preemptions
#  - ar-preempts-everything: Allow all ARs to preempt other leases.
# 
# See the Haizea documentation for details on how to write your own
# policies.
policy-preemption: ar-preempts-everything

# Option: policy-host-selection
# Required: No (default is greedy)
# Valid values: Any string
# 
# Physical host selection policy. controls how Haizea chooses what physical hosts 
# to map VMs to. This option is closely related to the mapper options 
# (if the greedy mapper is used, then the greedy host selection policy
# should be used, or unexpected results will happen). 
# 
# The two built-in policies are:
#  - no-policy: Choose nodes arbitrarily
#  - greedy: Apply a greedy policy that tries to minimize the number
#    of preemptions.
# 
# See the Haizea documentation for details on how to write your own
# policies.
#policy-host-selection: greedy

# Option: policy-pricing
# Required: No (default is free)
# Valid values: Any string
# 
# ...
# 
# See the Haizea documentation for details on how to write your own
# policies.
#policy-pricing: free

# Option: wakeup-interval
# Required: No (default is 00:01:00.00)
# Valid values: A duration in the format HH:MM:SS
# 
# Interval at which Haizea will wake up
# to manage resources and process pending requests.
# This option is not used when using a simulated clock,
# since the clock will skip directly to the time where an
# event is happening.
wakeup-interval: 10

# Option: backfilling
# Required: No
# Valid values: off, aggressive, conservative, intermediate
# 
# Backfilling algorithm to use. Valid values are:
# 
#  - off: don't do backfilling
#  - aggressive: at most 1 reservation in the future
#  - conservative: unlimited reservations in the future
#  - intermediate: N reservations in the future (N is specified
#    in the backfilling-reservations option)
backfilling: aggressive

# Option: backfilling-reservations
# Required: Only if [scheduling].backfilling == intermediate
# Valid values: An integer number
# 
# Number of future reservations to allow when
# using the "intermediate" backfilling option.
#backfilling-reservations: 

# Option: suspension
# Required: Yes
# Valid values: none, serial-only, all
# 
# Specifies what can be suspended. Valid values are:
# 
#  - none: suspension is never allowed
#  - serial-only: only 1-node leases can be suspended
#  - all: any lease can be suspended
suspension: all

# Option: suspend-rate
# Required: Yes
# Valid values: A real number
# 
# Rate at which VMs are assumed to suspend (in MB of
# memory per second)
suspend-rate: 32

# Option: resume-rate
# Required: Yes
# Valid values: A real number
# 
# Rate at which VMs are assumed to resume (in MB of
# memory per second)
resume-rate: 32

# Option: suspendresume-exclusion
# Required: No (default is local)
# Valid values: local, global
# 
# When suspending or resuming a VM, the VM's memory is dumped to a
# file on disk. To correctly estimate the time required to suspend
# a lease with multiple VMs, Haizea makes sure that no two 
# suspensions/resumptions happen at the same time (e.g., if eight
# memory files were being saved at the same time to disk, the disk's
# performance would be reduced in a way that is not as easy to estimate
# as if only one file were being saved at a time).
# 
# Depending on whether the files are being saved to/read from a global
# or local filesystem, this exclusion can be either global or local.
#suspendresume-exclusion: local

# Option: scheduling-threshold-factor
# Required: No (default is 1)
# Valid values: An integer number
# 
# To avoid thrashing, Haizea will not schedule a lease unless all overheads
# can be correctly scheduled (which includes image transfers, suspensions, etc.).
# However, this can still result in situations where a lease is prepared,
# and then immediately suspended because of a blocking lease in the future.
# The scheduling threshold factor can be used to specify that a lease must
# not be scheduled unless it is guaranteed to run for a minimum amount of
# time (the rationale behind this is that you ideally don't want leases
# to be scheduled if they're not going to be active for at least as much time
# as was spent in overheads).
# 
# The default value is 1, meaning that the lease will be active for at least
# as much time T as was spent on overheads (e.g., if preparing the lease requires
# 60 seconds, and we know that it will have to be suspended, requiring 30 seconds,
# Haizea won't schedule the lease unless it can run for at least 90 minutes).
# In other words, a scheduling factor of F required a minimum duration of 
# F*T. A value of 0 could lead to thrashing, since Haizea could end up with
# situations where a lease starts and immediately gets suspended.
#scheduling-threshold-factor: 1

# Option: override-suspend-time
# Required: No
# Valid values: An integer number
# 
# Overrides the time it takes to suspend a VM to a fixed value
# (i.e., not computed based on amount of memory, enactment overhead, etc.)
#override-suspend-time: 

# Option: override-resume-time
# Required: No
# Valid values: An integer number
# 
# Overrides the time it takes to suspend a VM to a fixed value
# (i.e., not computed based on amount of memory, enactment overhead, etc.)
#override-resume-time: 

# Option: force-scheduling-threshold
# Required: No
# Valid values: A duration in the format HH:MM:SS
# 
# This option can be used to force a specific scheduling threshold time
# to be used, instead of calculating one based on overheads.
#force-scheduling-threshold: 

# Option: migration
# Required: No (default is no)
# Valid values: no, yes, yes-notransfer
# 
# Specifies whether leases can be migrated from one
# physical node to another. Valid values are: 
# 
#  - no
#  - yes
#  - yes-notransfer: migration is performed without
#    transferring any files.
migration: yes

# Option: non-schedulable-interval
# Required: No (default is 00:00:10.00)
# Valid values: A duration in the format HH:MM:SS
# 
# The minimum amount of time that must pass between
# when a request is scheduled to when it can actually start.
# The default should be good for most configurations, but
# may need to be increased if you're dealing with exceptionally
# high loads.
#non-schedulable-interval: 00:00:10.00

# Option: shutdown-time
# Required: No
# Valid values: A duration in the format HH:MM:SS
# 
# The amount of time that will be allocated for a VM to shutdown.
# When running in OpenNebula mode, it is advisable to set this to
# a few seconds, so no operation gets scheduled right when a
# VM is shutting down. The most common scenario is that a VM
# will start resuming right when another VM shuts down. However,
# since both these activities involve I/O, it can delay the resume
# operation and affect Haizea's estimation of how long the resume
# will take.
#shutdown-time: 

# Option: enactment-overhead
# Required: No
# Valid values: A duration in the format HH:MM:SS
# 
# The amount of time that is required to send
# an enactment command. This value will affect suspend/resume
# estimations and, in OpenNebula mode, will force a pause
# of this much time between suspend/resume enactment
# commands. When suspending/resuming many VMs at the same time
# (which is likely to happen if suspendresume-exclusion is set
# to "local"), it will take OpenNebula 1-2 seconds to process
# each command (this is a small amount of time, but if 32 VMs
# are being suspended at the same time, on in each physical node,
# this time can compound up to 32-64 seconds, which has to be
# taken into account when estimating when to start a suspend
# operation that must be completed before another lease starts).
#enactment-overhead: 


# ====================================================================== #
#                                                                        #
#                              [simulation]                              #
# This section is used to specify options when Haizea runs in simulation #
#                                                                        #
# ====================================================================== #
[simulation]

# Option: clock
# Required: No (default is real)
# Valid values: real, simulated
# 
# Type of clock to use in simulation:
# 
#  - simulated: A simulated clock that fastforwards through
#    time. Can only use the tracefile request
#    frontend
#  - real: A real clock is used, but simulated resources and
#    enactment actions are used. Can only use the RPC
#    request frontend.
clock: simulated

# Option: starttime
# Required: Only if [simulation].clock == simulated
# Valid values: An ISO timestamp: i.e., YYYY-MM-DD HH:MM:SS
# 
# Time at which simulated clock will start.
starttime: 2006-11-25 13:00:00

# Option: resources
# Required: Yes
# Valid values: Any string
# 
# Simulated resources. This option can take two values,
# "in-tracefile" (which means that the description of
# the simulated site is in the tracefile) or a string 
# specifying a site with homogeneous resources. 
# The format is:
# 
# <numnodes> [ <resource_type>:<resource_quantity>]+
# 
# For example, "4  CPU:100 Memory:1024" describes a site
# with four nodes, each with one CPU and 1024 MB of memory.
resources: 4  CPU:100 Memory:1024

# Option: imagetransfer-bandwidth
# Required: Yes
# Valid values: An integer number
# 
# Bandwidth (in Mbps) available for image transfers.
# This would correspond to the outbound network bandwidth of the
# node where the images are stored.
imagetransfer-bandwidth: 100

# Option: stop-when
# Required: No (default is all-leases-done)
# Valid values: all-leases-done, besteffort-submitted, besteffort-done, exact
# 
# When using the simulated clock, this specifies when the
# simulation must end. Valid options are:
# 
#  - all-leases-done: All requested leases have been completed
#    and there are no queued/pending requests.
#  - besteffort-submitted: When all best-effort leases have been
#    submitted.
#  - besteffort-done: When all best-effort leases have been
#    completed.    
#  - exact: Stop at a specific time (use option stop-when-time)
#stop-when: all-leases-done

# Option: stop-when-time
# Required: Only if [simulation].stop-when == exact
# Valid values: Any string
# 
# A time in format DD:HH:MM:SS at which the simulation should be
# stopped (useful for debugging)
#stop-when-time: 

# Option: status-message-interval
# Required: No
# Valid values: An integer number
# 
# If specified, the simulated clock will print a status
# message with some basic statistics. This is useful to keep track
# of long simulations. The interval is specified in minutes.
#status-message-interval: 

# Option: sanity-check
# Required: No
# Valid values: True or False
# 
# Perform a sanity check at every timestep (only for debugging)
#sanity-check: 


# ====================================================================== #
#                                                                        #
#                              [accounting]                              #
# Haizea can collect information while running, and save that            #
# information to a file for off-line processing. This section includes   #
# options controlling this feature.                                      #
#                                                                        #
# ====================================================================== #
[accounting]

# Option: datafile
# Required: No
# Valid values: Any string
# 
# This is the file where statistics on
# the scheduler's run will be saved to (waiting time of leases,
# utilization data, etc.). If omitted, no data will be saved.
datafile: /var/tmp/haizea/results.dat

# Option: probes
# Required: No
# Valid values: Any string
# 
# Accounting probes.
# 
# There are four built-in probes:
# 
#  - AR: Collects information on AR leases.
#  - best-effort: Collects information on best effort leases.
#  - immediate: Collects information immediate leases.
#  - utilization: Collects information on resource utilization.
# 
# See the Haizea documentation for details on how to write your
# own accounting probes.
probes: ar best-effort immediate cpu-utilization

# Option: attributes
# Required: No
# Valid values: Any string
# 
# This option is used internally by Haizea when using
# multiconfiguration files. See the multiconfiguration
# documentation for more details.
#attributes: 


# ====================================================================== #
#                                                                        #
#                         [deploy-imagetransfer]                         #
# When lease deployment with disk image transfers is selected, this      #
# section is used to control image deployment parameters.                #
#                                                                        #
# ====================================================================== #
[deploy-imagetransfer]

# Option: transfer-mechanism
# Required: Yes
# Valid values: unicast, multicast
# 
# Specifies how disk images are transferred. Valid values are:
# 
#  - unicast: A disk image can be transferred to just one node at a time
#  - multicast: A disk image can be multicast to multiple nodes at 
#    the same time.
transfer-mechanism: multicast

# Option: avoid-redundant-transfers
# Required: No (default is True)
# Valid values: True or False
# 
# Specifies whether the scheduler should take steps to
# detect and avoid redundant transfers (e.g., if two leases are
# scheduled on the same node, and they both require the same disk
# image, don't transfer the image twice; allow one to "piggyback"
# on the other). There is generally no reason to set this option
# to False.
avoid-redundant-transfers: True

# Option: force-imagetransfer-time
# Required: No
# Valid values: A duration in the format HH:MM:SS
# 
# Forces the image transfer time to a specific amount.
# This options is intended for testing purposes.
#force-imagetransfer-time: 

# Option: diskimage-reuse
# Required: No (default is none)
# Valid values: none, image-caches
# 
# Specifies whether disk image caches should be created
# on the nodes, so the scheduler can reduce the number of transfers
# by reusing images. Valid values are:
# 
#  - none: No image reuse
#  - image-caches: Use image caching algorithm described in Haizea
#    publications
diskimage-reuse: none

# Option: diskimage-cache-size
# Required: Only if [deploy-imagetransfer].diskimage-reuse == True
# Valid values: An integer number
# 
# Specifies the size (in MB) of the disk image cache on
# each physical node.
diskimage-cache-size: 20480


# ====================================================================== #
#                                                                        #
#                              [tracefile]                               #
# When reading in requests from a tracefile, this section is used to     #
# specify the tracefile and other parameters.                            #
#                                                                        #
# ====================================================================== #
[tracefile]

# Option: tracefile
# Required: Yes
# Valid values: Any string
# 
# Path to tracefile to use.
tracefile: /usr/share/haizea/traces/sample.lwf

# Option: annotationfile
# Required: No
# Valid values: Any string
# 
# Path to lease annotation file.
#annotationfile: 

# Option: injectionfile
# Required: No
# Valid values: Any string
# 
# Path to file with leases to "inject" into the tracefile.
#injectionfile: 

# Option: runtime-slowdown-overhead
# Required: No
# Valid values: A real number
# 
# Adds a runtime overhead (in %) to the lease duration.
#runtime-slowdown-overhead: 

# Option: add-overhead
# Required: No (default is none)
# Valid values: none, all, besteffort
# 
# Specifies what leases will have a runtime overhead added:
# 
#  - none: No runtime overhead must be added.
#  - besteffort: Add only to best-effort leases
#  - all: Add runtime overhead to all leases
#add-overhead: none

# Option: bootshutdown-overhead
# Required: No
# Valid values: A duration in the format HH:MM:SS
# 
# Specifies how many seconds will be alloted to
# boot and shutdown of the lease.
#bootshutdown-overhead: 

# Option: override-memory
# Required: No (default is -1)
# Valid values: An integer number
# 
# Overrides memory requirements specified in tracefile.
#override-memory: -1


# ====================================================================== #
#                                                                        #
#                              [opennebula]                              #
# This section is used to specify OpenNebula parameters, necessary when  #
# using Haizea as an OpenNebula scheduling backend.                      #
#                                                                        #
# ====================================================================== #
#[opennebula]

# Option: host
# Required: Yes
# Valid values: Any string
# 
# Host where OpenNebula is running.
# Typically, OpenNebula and Haizea will be installed
# on the same host, so the following option should be
# set to 'localhost'. If they're on different hosts,
# make sure you modify this option accordingly.
#host: 

# Option: port
# Required: No (default is 2633)
# Valid values: An integer number
# 
# TCP port of OpenNebula's XML RPC server
#port: 2633

# Option: stop-when-no-more-leases
# Required: No
# Valid values: True or False
# 
# This option is useful for testing and running experiments.
# If set to True, Haizea will stop when there are no more leases
# to process (which allows you to tun Haizea and OpenNebula unattended,
# and count on it stopping when there are no more leases to process).
# For now, this only makes sense if you're seeding Haizea with requests from
# the start (otherwise, it will start and immediately stop).
#stop-when-no-more-leases: 

# Option: dry-run
# Required: No
# Valid values: True or False
# 
# This option is useful for testing.
# If set to True, Haizea will fast-forward through time (note that this is
# different that using the simulated clock, which has to be used with a tracefile;
# with an Haizea/OpenNebula dry run, you will have to seed OpenNebula with requests
# before starting Haizea). You will generally want to set stop-when-no-more-leases
# when doing a dry-run.
# 
# IMPORTANT: Haizea will still send out enactment commands to OpenNebula. Make
# sure you replace onevm with a dummy command that does nothing (or that reacts
# in some way you want to test; e.g., by emulating a deployment failure, etc.)
#dry-run: 


