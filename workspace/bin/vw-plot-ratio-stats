#!/bin/bash

function usage()
{
    echo "Usage: `basename $0` [-d graph_dir] [-o output_type] [-a] [-r] -b begin_event1 -e end_event1"
    echo "                           -c begin_event2 -f end_event2 [-o output]"
    echo "                           [-x event1 -y event2] log_id1 [[[log_id2] log_id3] ... ]"
    echo "       `basename $0` -?"
    echo
    echo "      -d graph_dir    Directory in which to produce plotting data."
    echo "                      Default is \$WORKSPACE_VAR/graphs/avg_duration/\$GRAPH_NAME"
    echo "                      where \$GRAPH_NAME is generated based on the log ids"
    echo "      -o output_type  Besides generating the GNUPlot file, use GNUPlot to generate"
    echo "                      a file of type <output_type> (called 'graph.<output_type>')"
    echo "                      Valid types are png, jpg, pdf, and eps."
    echo "      -b begin_event  Start event"
    echo "      -e end_event    End event"
    echo "      log_idN         Log identifiers to analyze"
    echo "      -?              Prints this usage message"
    echo
}



#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~ BASIC SANITY CHECKS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

if [ "$WORKSPACE_DIR" == "" ];
then
    echo "WORKSPACE_DIR not set."
    exit 1
fi

if [ "$WORKSPACE_VAR" == "" ];
then
    echo "WORKSPACE_VAR not set."
    exit 1
fi

if [ $# -eq 0 ];
then
    echo "ERROR: No arguments specified!"
    usage
    exit 1
fi

# Error on unset variables
set -u




#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ GET OPTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

# Defaults
GRAPH_DIR=""
OUTPUT_TYPE=""
BEGIN_EVENT1=""
END_EVENT1=""
BEGIN_EVENT2=""
END_EVENT2=""
EVENT1=""
EVENT2=""
AVERAGE=false
RATIO=false
EVENT_OPTS=""


# Get options
while getopts ":ard:b:e:x:y:c:f:o:?" OPTION; do
    case $OPTION in
        d )
            GRAPH_DIR=$OPTARG
	;;
        b )
            BEGIN_EVENT1=$OPTARG
	    EVENT_OPTS="$EVENT_OPTS -b $BEGIN_EVENT1"
        ;;
        e )
            END_EVENT1=$OPTARG
	    EVENT_OPTS="$EVENT_OPTS -e $END_EVENT1"
        ;;
        c )
            BEGIN_EVENT2=$OPTARG
	    EVENT_OPTS="$EVENT_OPTS -c $BEGIN_EVENT2"
        ;;
        f )
            END_EVENT2=$OPTARG
	    EVENT_OPTS="$EVENT_OPTS -d $END_EVENT2"
        ;;
        o )
            OUTPUT_TYPE=$OPTARG
        ;;
        x )
            EVENT1=$OPTARG
	    EVENT_OPTS="$EVENT_OPTS -x $EVENT1"
        ;;
        y )
            EVENT2=$OPTARG
	    EVENT_OPTS="$EVENT_OPTS -y $EVENT2"
        ;;
        a )
            AVERAGE=true
        ;;
        r )
            RATIO=true
	;;
        \? )
            usage
            exit 1
        ;;
        * )
            echo "ERROR: Unrecognized option"
            exit 1
        ;;
    esac
done

shift `expr $OPTIND - 1`

if [ $# -eq 0 ];
then
    echo "ERROR: Must specify at least one log id"
    usage
    exit 1
fi
#if [ "$BEGIN_EVENT" == "" ] || [ "$END_EVENT" == "" ];
#then
#    echo "ERROR: No begin or end event name specified."
#    usage
#    exit 1
#fi

if [ "$GRAPH_DIR" == "" ];
then
    GRAPH_DIR=$WORKSPACE_VAR/graphs/ratio_stats

    for LOG_ID in $@;
    do
        GRAPH_DIR=${GRAPH_DIR}_$LOG_ID
    done
fi


# Generate ratios

mkdir -p $GRAPH_DIR

for LOG_ID in $@;
do
    vw-log-ratio -l $LOG_ID $EVENT_OPTS -o $GRAPH_DIR/ratio_$LOG_ID.dat
done


# Generate GNUPlot file

I=1

echo "set xlabel \"Time (s)\"" > $GRAPH_DIR/ratio.plot
echo "set ylabel \"Ratio\"" >> $GRAPH_DIR/ratio.plot
echo "set key below box" >> $GRAPH_DIR/ratio.plot
echo "plot \\" >> $GRAPH_DIR/ratio.plot
FIRST=true
for LOG_ID in $@;
do
    if $AVERAGE;
    then
        if ! $FIRST;
        then
            echo ",\\" >> $GRAPH_DIR/ratio.plot
        else
            FIRST=false
        fi
        echo -n "\"ratio_$LOG_ID.dat\" using 1:3 t \"AVG ($LOG_ID)\" lt $I with lines" >> $GRAPH_DIR/ratio.plot
    fi
    if $RATIO;
    then
        if ! $FIRST;
        then
            echo ",\\" >> $GRAPH_DIR/ratio.plot
        else
            FIRST=false
        fi
        echo -n "\"ratio_$LOG_ID.dat\" using 1:2 t \"RATIO ($LOG_ID)\" lt $I pt 2 with points" >> $GRAPH_DIR/ratio.plot
    fi
 
    I=$((I+1))
done

if [ "$OUTPUT_TYPE" != "" ];
then
    echo "set output \"$GRAPH_DIR/graph.$OUTPUT_TYPE\"" > $GRAPH_DIR/ratio_$OUTPUT_TYPE.plot.tmp
    echo "set terminal $OUTPUT_TYPE" >> $GRAPH_DIR/ratio_$OUTPUT_TYPE.plot.tmp
    cat $GRAPH_DIR/ratio_$OUTPUT_TYPE.plot.tmp $GRAPH_DIR/ratio.plot > $GRAPH_DIR/ratio_$OUTPUT_TYPE.plot
    rm $GRAPH_DIR/ratio_$OUTPUT_TYPE.plot.tmp
    cd $GRAPH_DIR
    gnuplot ratio_$OUTPUT_TYPE.plot
fi